// <auto-generated />
using System;
using Ecommerce.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230101230330_Updated_SKU_And_Quantity")]
    partial class Updated_SKU_And_Quantity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("RegularPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 1, 1, 23, 3, 29, 74, DateTimeKind.Unspecified).AddTicks(3530), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "T-shirt the hate,100 cotton, machine embroidery, oversized fit.\r\n                                so much hate for me everywhere today, can't figure out what i did to cause it... i am trying to ovrercome, to overcome it all.",
                            IsActive = true,
                            Label = "preorder",
                            Name = "t-shirt the hate",
                            RegularPrice = 3000m
                        });
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ProductItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            ProductItemId = 1,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-000-S-M"
                        },
                        new
                        {
                            ProductItemId = 2,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-000-M-L"
                        },
                        new
                        {
                            ProductItemId = 3,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-000-XL+"
                        },
                        new
                        {
                            ProductItemId = 4,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-FFF-S-M"
                        },
                        new
                        {
                            ProductItemId = 5,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-FFF-M-L"
                        },
                        new
                        {
                            ProductItemId = 6,
                            ProductId = 1,
                            Quantity = 50,
                            SKU = "HATE-FFF-XL+"
                        });
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.ProductItemVariationOption", b =>
                {
                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("VariationOptionId")
                        .HasColumnType("int");

                    b.HasKey("ProductItemId", "VariationOptionId");

                    b.HasIndex("VariationOptionId");

                    b.HasIndex("ProductItemId", "VariationOptionId");

                    b.ToTable("ProductItemsVariationOptions");

                    b.HasData(
                        new
                        {
                            ProductItemId = 1,
                            VariationOptionId = 2
                        },
                        new
                        {
                            ProductItemId = 1,
                            VariationOptionId = 3
                        },
                        new
                        {
                            ProductItemId = 2,
                            VariationOptionId = 2
                        },
                        new
                        {
                            ProductItemId = 2,
                            VariationOptionId = 4
                        },
                        new
                        {
                            ProductItemId = 3,
                            VariationOptionId = 2
                        },
                        new
                        {
                            ProductItemId = 3,
                            VariationOptionId = 5
                        },
                        new
                        {
                            ProductItemId = 4,
                            VariationOptionId = 1
                        },
                        new
                        {
                            ProductItemId = 4,
                            VariationOptionId = 3
                        },
                        new
                        {
                            ProductItemId = 5,
                            VariationOptionId = 1
                        },
                        new
                        {
                            ProductItemId = 5,
                            VariationOptionId = 4
                        },
                        new
                        {
                            ProductItemId = 6,
                            VariationOptionId = 1
                        },
                        new
                        {
                            ProductItemId = 6,
                            VariationOptionId = 5
                        });
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.Variation", b =>
                {
                    b.Property<int>("VariationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VariationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Variations");

                    b.HasData(
                        new
                        {
                            VariationId = 1,
                            Name = "Color"
                        },
                        new
                        {
                            VariationId = 2,
                            Name = "Size"
                        });
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.VariationOption", b =>
                {
                    b.Property<int>("VariationOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VariationId")
                        .HasColumnType("int");

                    b.HasKey("VariationOptionId");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.HasIndex("VariationId");

                    b.ToTable("VariationOptions");

                    b.HasData(
                        new
                        {
                            VariationOptionId = 1,
                            Value = "White",
                            VariationId = 1
                        },
                        new
                        {
                            VariationOptionId = 2,
                            Value = "Black",
                            VariationId = 1
                        },
                        new
                        {
                            VariationOptionId = 3,
                            Value = "S-M",
                            VariationId = 2
                        },
                        new
                        {
                            VariationOptionId = 4,
                            Value = "M-L",
                            VariationId = 2
                        },
                        new
                        {
                            VariationOptionId = 5,
                            Value = "XL+",
                            VariationId = 2
                        });
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.ProductItem", b =>
                {
                    b.HasOne("Ecommerce.DataAccess.Entities.Products.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.ProductItemVariationOption", b =>
                {
                    b.HasOne("Ecommerce.DataAccess.Entities.Products.ProductItem", "ProductItem")
                        .WithMany("ProductItemVariationOptions")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.DataAccess.Entities.Products.VariationOption", "VariationOption")
                        .WithMany("ProductItemVariationOptions")
                        .HasForeignKey("VariationOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("VariationOption");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.VariationOption", b =>
                {
                    b.HasOne("Ecommerce.DataAccess.Entities.Products.Variation", "Variation")
                        .WithMany("VariationOptions")
                        .HasForeignKey("VariationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variation");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.ProductItem", b =>
                {
                    b.Navigation("ProductItemVariationOptions");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.Variation", b =>
                {
                    b.Navigation("VariationOptions");
                });

            modelBuilder.Entity("Ecommerce.DataAccess.Entities.Products.VariationOption", b =>
                {
                    b.Navigation("ProductItemVariationOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
